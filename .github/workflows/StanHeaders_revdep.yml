---
# Github Actions workflow to check StanHeaders reverse dependencies
# yamllint disable rule:line-length

name: StanHeaders Reverse Dependencies

'on':
  push:
    branches:
      - StanHeaders_*
  pull_request:
    branches:
      - StanHeaders_*

jobs:
  StanHeaders_revdep:
    if: "! contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ubuntu-20.04

    name: StanHeaders Reverse Dependencies

    strategy:
      fail-fast: true
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: 'devel'

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Install system libraries
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y libcurl4-openssl-dev || true
        shell: bash

      - name: Query dependencies
        run: |
          options(install.packages.check.source = "no")
          options(pkgType = ifelse(grepl("linux", R.version$os), "source", "binary"))
          install.packages('remotes')
          install.packages('V8')
          saveRDS(remotes::dev_package_deps(pkg = "./rstan/rstan", dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('./rstan/rstan/DESCRIPTION'))")
          sudo -s eval "$sysreqs"
        shell: bash

      - name: Install dependencies
        run: |
          if (!exists("NO_LOCAL_MAKEVARS")) {
            dotR <- file.path(Sys.getenv("HOME"), ".R")
            if (!file.exists(dotR)) dir.create(dotR)
            path_makevars <- ifelse(.Platform$OS.type == "windows", "Makevars.win", "Makevars")
            M <- file.path(dotR, path_makevars)
            if (!file.exists(M)) file.create(M)
            cat("\nCXX14 += -std=c++1y",
                "CXXFLAGS += -Wno-deprecated-declarations -Wno-ignored-attributes -Wno-unused-function -Wno-maybe-uninitialized -Wno-parentheses -Wno-sign-compare -Wno-attributes -Wno-unused-but-set-variable -Wno-reorder",
                "CXX11FLAGS += -Wno-deprecated-declarations -Wno-ignored-attributes -Wno-unused-function -Wno-maybe-uninitialized -Wno-parentheses -Wno-sign-compare -Wno-attributes -Wno-unused-but-set-variable -Wno-reorder",
                "CXX14FLAGS += -Wno-deprecated-declarations -Wno-ignored-attributes -Wno-unused-function -Wno-maybe-uninitialized -Wno-parentheses -Wno-sign-compare -Wno-attributes -Wno-unused-but-set-variable -Wno-reorder",
                file = M, sep = "\n", append = TRUE)
          }
          remotes::install_deps(pkg = "./rstan/rstan", dependencies = TRUE)
          remotes::install_github("r-lib/revdepcheck", dependencies = TRUE)
        shell: Rscript {0}

      - name: Install StanHeaders (GitHub)
        run: |
          try(system("sh sh_b.sh --no-build-vignettes --no-manual"))
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Install baggr (CRAN)
        run: |
          remotes::install_cran("baggr")
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Install rstanarm (CRAN)
        run: |
          remotes::install_cran("rstanarm")
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Check all reverse dependencies
        env:
          _R_CHECK_CRAN_INCOMING_: false
        run: |
          revdepcheck::revdep_check(pkg = "./StanHeaders", quiet = FALSE, timeout = as.difftime(60, units = "mins"), num_workers = 4, bioc = FALSE)
        shell: Rscript {0}

      - name: Show revdep_check output
        if: always()
        run: |
          revdepcheck::revdep_summary()
          revdepcheck::revdep_details()
        shell: Rscript {0}
